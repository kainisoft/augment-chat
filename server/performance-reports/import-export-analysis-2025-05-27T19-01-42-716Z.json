{
  "timestamp": "2025-05-27T19:01:42.714Z",
  "modules": [
    {
      "module": "@app/common",
      "importedBy": [
        "api-gateway",
        "auth-service",
        "user-service",
        "chat-service",
        "notification-service",
        "logging-service"
      ],
      "exports": [
        "* from ./common.module",
        "* from ./common.service",
        "* from ./health/health.controller",
        "* from ./bootstrap/bootstrap.service",
        "* from ./config",
        "* from ./errors",
        "* from ./utils/string.util",
        "* from ./utils/date.util",
        "* from ./utils/validation.util"
      ],
      "unusedExports": [],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Consider replacing barrel exports with selective exports"
      ]
    },
    {
      "module": "@app/validation",
      "importedBy": [
        "user-service",
        "logging-service"
      ],
      "exports": [
        "ValidationModule",
        "ValidationService",
        "ValidationCacheService",
        "validationCache",
        "VALIDATION_CACHE_KEYS",
        "CachedValidators",
        "",
        "IsUUIDField",
        "IsEmailField",
        "IsUsernameField",
        "IsStrongPasswordField",
        "IsDisplayNameField",
        "IsOptionalStringField",
        "IsJWTTokenField",
        "IsRefreshTokenField",
        "",
        "IsBioField",
        "IsAvatarUrlField",
        "IsSearchTermField",
        "IsISODateField",
        "IsLogLevelField",
        "IsJWTToken",
        "IsValidDateRange",
        "",
        "IsOptimizedEmailField",
        "IsOptimizedUUIDField",
        "IsOptimizedUsernameField",
        "IsOptimizedJWTTokenField",
        "IsOptimizedStrongPasswordField",
        "IsBatchValidatedFields",
        "IsPerformanceMonitoredField",
        "ValidationPerformanceUtils",
        ""
      ],
      "unusedExports": [
        "ValidationModule",
        "ValidationService",
        "ValidationCacheService",
        "validationCache",
        "VALIDATION_CACHE_KEYS",
        "CachedValidators",
        "IsEmailField",
        "IsStrongPasswordField",
        "IsOptionalStringField",
        "IsJWTTokenField",
        "IsRefreshTokenField",
        "IsSearchTermField",
        "IsJWTToken",
        "IsOptimizedEmailField",
        "IsOptimizedUUIDField",
        "IsOptimizedUsernameField",
        "IsOptimizedJWTTokenField",
        "IsOptimizedStrongPasswordField",
        "IsBatchValidatedFields",
        "IsPerformanceMonitoredField",
        "ValidationPerformanceUtils"
      ],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Remove 21 unused exports",
        "Large number of exports - consider module splitting"
      ]
    },
    {
      "module": "@app/dtos",
      "importedBy": [
        "auth-service",
        "user-service",
        "logging-service"
      ],
      "exports": [
        "DtosModule",
        "LoginDto",
        "RegisterDto",
        "RefreshTokenDto",
        "ForgotPasswordDto",
        "ResetPasswordDto",
        "ValidateTokenDto",
        "",
        "AuthResponseDto",
        "TokenValidationResponseDto",
        "LogoutResponseDto",
        "",
        "PaginationQueryDto",
        "PaginatedResponseDto",
        "PaginationMetaDto",
        "",
        "ErrorResponseDto",
        "ValidationErrorResponseDto",
        "AuthErrorResponseDto",
        "",
        "ListResponseDto",
        "SearchResponseDto",
        "HistoryResponseDto",
        "PaginationMetadata",
        "createPaginationMetadata",
        "",
        "GraphQLSearchPaginationInput",
        "GraphQLPageInfo",
        "GraphQLListResponse",
        "GraphQLSearchResponse",
        "GraphQLConnection",
        "GraphQLEdge",
        "createGraphQLConnection",
        "createGraphQLListResponse",
        "createGraphQLSearchResponse",
        ""
      ],
      "unusedExports": [
        "DtosModule",
        "ValidateTokenDto",
        "TokenValidationResponseDto",
        "LogoutResponseDto",
        "PaginatedResponseDto",
        "PaginationMetaDto",
        "ErrorResponseDto",
        "ValidationErrorResponseDto",
        "AuthErrorResponseDto",
        "PaginationMetadata",
        "createPaginationMetadata",
        "GraphQLPageInfo",
        "GraphQLConnection",
        "GraphQLEdge",
        "createGraphQLConnection",
        "createGraphQLListResponse",
        "createGraphQLSearchResponse"
      ],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Remove 17 unused exports",
        "Large number of exports - consider module splitting"
      ]
    },
    {
      "module": "@app/security",
      "importedBy": [
        "auth-service",
        "user-service",
        "logging-service"
      ],
      "exports": [
        "SecurityModule",
        "RateLimit",
        "RateLimitService",
        "SecurityUtilsService",
        "RateLimitGuard",
        "LazySecurityService",
        "LazySecurityOperation",
        "MemoizedSecurityOperation",
        ""
      ],
      "unusedExports": [
        "RateLimitService",
        "SecurityUtilsService",
        "LazySecurityService",
        "LazySecurityOperation",
        "MemoizedSecurityOperation"
      ],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Remove 5 unused exports"
      ]
    },
    {
      "module": "@app/testing",
      "importedBy": [],
      "exports": [
        "TestingModule",
        "LazyTestingUtils",
        "lazyLoadMockFactory",
        "lazyLoadControllerTestBuilder",
        "lazyLoadServiceTestBuilder",
        "lazyLoadTestSetup",
        "",
        "MockFactoryService",
        "ControllerTestBuilder",
        "ServiceTestBuilder",
        "TestSetupService",
        "TestDatabaseService",
        "E2ETestSetupService"
      ],
      "unusedExports": [
        "TestingModule",
        "LazyTestingUtils",
        "lazyLoadMockFactory",
        "lazyLoadControllerTestBuilder",
        "lazyLoadServiceTestBuilder",
        "lazyLoadTestSetup",
        "",
        "MockFactoryService",
        "ControllerTestBuilder",
        "ServiceTestBuilder",
        "TestSetupService",
        "TestDatabaseService",
        "E2ETestSetupService"
      ],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Remove 13 unused exports",
        "Module is not imported by any service - consider removal"
      ]
    },
    {
      "module": "@app/domain",
      "importedBy": [
        "auth-service",
        "user-service"
      ],
      "exports": [
        "* from ./domain.module",
        "* from ./domain.service",
        "* from ./models",
        "* from ./errors"
      ],
      "unusedExports": [],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Consider replacing barrel exports with selective exports"
      ]
    },
    {
      "module": "@app/logging",
      "importedBy": [
        "api-gateway",
        "auth-service",
        "user-service",
        "chat-service",
        "notification-service"
      ],
      "exports": [
        "* from ./logging.module",
        "* from ./logging.service",
        "* from ./interfaces/log-message.interface",
        "* from ./transports/kafka.transport",
        "* from ./middleware/logging.middleware",
        "* from ./interceptors/logging.interceptor",
        "* from ./filters/exception.filter",
        "* from ./utils/request-id.util",
        "* from ./utils/redaction.util",
        "* from ./utils/log-helpers",
        "* from ./errors/error-logger.service"
      ],
      "unusedExports": [],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Consider replacing barrel exports with selective exports"
      ]
    },
    {
      "module": "@app/redis",
      "importedBy": [
        "auth-service",
        "user-service"
      ],
      "exports": [
        "* from ./redis.module",
        "* from ./redis.service",
        "* from ./interfaces/redis-options.interface",
        "* from ./interfaces/redis-client.interface",
        "* from ./constants/redis.constants",
        "* from ./health/redis-health.indicator",
        "* from ./repositories",
        "* from ./cache",
        "* from ./session",
        "* from ./pubsub"
      ],
      "unusedExports": [],
      "circularDependencies": [],
      "optimizationOpportunities": [
        "Consider replacing barrel exports with selective exports"
      ]
    }
  ],
  "optimizations": [
    {
      "module": "@app/common",
      "currentPattern": "barrel",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 100,
      "bundleImpact": 84327,
      "recommendations": [
        "Switch from barrel to selective exports"
      ]
    },
    {
      "module": "@app/validation",
      "currentPattern": "selective",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 36.36363636363637,
      "bundleImpact": 37648,
      "recommendations": [
        "Improve tree-shaking by using selective exports"
      ]
    },
    {
      "module": "@app/dtos",
      "currentPattern": "selective",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 52.77777777777778,
      "bundleImpact": 31548,
      "recommendations": []
    },
    {
      "module": "@app/security",
      "currentPattern": "selective",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 44.44444444444444,
      "bundleImpact": 35372,
      "recommendations": [
        "Improve tree-shaking by using selective exports"
      ]
    },
    {
      "module": "@app/testing",
      "currentPattern": "selective",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 0,
      "bundleImpact": 63507,
      "recommendations": [
        "Improve tree-shaking by using selective exports",
        "Testing module should be fully tree-shakable in production"
      ]
    },
    {
      "module": "@app/domain",
      "currentPattern": "barrel",
      "recommendedPattern": "barrel",
      "treeshakingEffectiveness": 100,
      "bundleImpact": 3327,
      "recommendations": []
    },
    {
      "module": "@app/logging",
      "currentPattern": "barrel",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 100,
      "bundleImpact": 74319,
      "recommendations": [
        "Switch from barrel to selective exports"
      ]
    },
    {
      "module": "@app/redis",
      "currentPattern": "barrel",
      "recommendedPattern": "selective",
      "treeshakingEffectiveness": 100,
      "bundleImpact": 110416,
      "recommendations": [
        "Switch from barrel to selective exports"
      ]
    }
  ],
  "circularDependencies": [],
  "recommendations": {
    "immediate": [
      "Remove unused exports from shared modules",
      "@app/validation: Remove 21 unused exports",
      "@app/dtos: Remove 17 unused exports",
      "@app/security: Remove 5 unused exports",
      "@app/testing: Remove 13 unused exports"
    ],
    "shortTerm": [
      "Improve tree-shaking effectiveness for low-performing modules",
      "Switch to selective exports for better optimization"
    ],
    "longTerm": [
      "Implement automated import/export analysis in CI/CD",
      "Consider micro-module architecture for large modules",
      "Implement dynamic imports for optional features"
    ]
  },
  "summary": {
    "totalModules": 8,
    "modulesWithIssues": 8,
    "circularDependencyCount": 0,
    "optimizationOpportunities": 11
  }
}