# WebSocket Gateway GraphQL Schema
# This schema defines the subscription types available through the WebSocket Gateway

# Chat-related subscription types
type MessageType {
  id: String!
  content: String!
  senderId: String!
  conversationId: String!
  type: String!
  createdAt: String!
  updatedAt: String!
}

type TypingIndicatorType {
  userId: String!
  conversationId: String!
  isTyping: Boolean!
  timestamp: String!
}

type MessageStatusType {
  messageId: String!
  status: String!
  userId: String!
  timestamp: String!
}

type ConversationParticipantType {
  userId: String!
  conversationId: String!
  action: String!
  timestamp: String!
}

# User presence-related subscription types
type UserPresenceType {
  userId: String!
  status: String!
  lastSeen: String
  timestamp: String!
}

type UserActivityType {
  userId: String!
  activity: String!
  timestamp: String!
}

type FriendStatusType {
  userId: String!
  friendId: String!
  status: String!
  timestamp: String!
}

# Subscription root type
type Subscription {
  # Chat subscriptions
  messageReceived(conversationId: String!): MessageType
  typingStatus(conversationId: String!): TypingIndicatorType
  messageStatusUpdated(conversationId: String!): MessageStatusType
  participantChanged(conversationId: String!): ConversationParticipantType
  
  # User presence subscriptions
  userPresenceChanged(userId: String): UserPresenceType
  userActivityChanged(userId: String): UserActivityType
  friendStatusChanged: FriendStatusType
  contactsPresenceUpdates: UserPresenceType
}

# Basic query type (required by GraphQL spec)
type Query {
  # Health check query
  health: String
}
